import iOptions from'./iOptions.js';const VERSION='0.5.1';const moduleName='iView';if(window.Dumper)Dumper.dump('MODULE',moduleName.concat(' v').concat(VERSION),'LOAD');class iView extends iOptions{constructor(scroller,selector,options={}){super(options);this._options=options;this.constructor.complete(this._options,{throttle:100,});this._holder=typeof scroller=='string'?document.querySelector(scroller):scroller;if(!selector)this._viewQueue=Array.from(this.holder.children);else this._viewQueue=typeof scroller=='string'?Array.from(document.querySelectorAll(selector)):selector;this.viewQueue.map(el=>el.ariaHidden=!this.isEndInView(el));this.holder.addEventListener('scroll',I.throttle(event=>{this.viewQueue.map(el=>el.ariaHidden=!this.isEndInView(el));},this._options.throttle),false);}
static get VERSION(){return VERSION;}
get VERSION(){return VERSION;}
get holder(){return this._holder;}
get viewQueue(){return this._viewQueue;}
static isInView(element){const bounding=typeof element=='string'?document.querySelector(element).getBoundingClientRect():element.getBoundingClientRect();return(bounding.top>=0&&bounding.left>=0&&bounding.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&bounding.right<=(window.innerWidth||document.documentElement.clientWidth));}
isEndInView(selector,holder){if(!holder)holder=this.holder;else holder=typeof holder=='string'?document.querySelector(holder):holder;const element=typeof selector=='string'?document.querySelector(selector):selector;const docViewTop=holder.getBoundingClientRect().top;const docViewBottom=docViewTop+holder.offsetHeight;const elementTop=element.getBoundingClientRect().top;const elementBottom=elementTop+element.offsetHeight;return elementBottom<=docViewBottom;}
get isInView(){const inView=this.constructor.isInView(this.element);if(this.element.dataset.inview!==inView.toString())this.element.dataset.inview=inView;return inView;}}
export default iView;