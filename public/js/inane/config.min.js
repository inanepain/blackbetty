import Dumper from'./dumper.js';Dumper.dump('MODULE','config','Load');const Options={Backbone:{Radio:{ChannelName:`Inane`,TestEvent:`test:event`,TestRequest:`test:request`,},},ICRoot:{ChannelProperty:'iChannel',},};if(window.__backboneAgent)window.__backboneAgent.handleBackbone(Backbone);if(window.__agent){Marionette.CompositeView=Marionette.CollectionView.extend({});window.__agent.start(Backbone,Marionette);}
const dumper=Dumper.get?.('Inane',{level:`debug`})?.get(`Config`)||console;const icroot=_icroot||{};if(!_icroot['config']){const buildOptions=({level,preloader}={})=>{const _tmp={};if(level)_tmp['dumper']={level:level};if(preloader!=undefined)_tmp['preloader']=preloader;return _tmp;}
_icroot['config']={QuickHeader:buildOptions(),ContextSpan:buildOptions(),};}
if(Backbone){dumper.info(`Backbone`);if(window[`Marionette`]&&!Backbone.Marionette)Backbone.Marionette=Marionette;if(Backbone.Radio){dumper.info(`Backbone.Radio`);Object.defineProperty(icroot,Options.ICRoot.ChannelProperty,{enumerable:false,configurable:false,writable:false,value:Backbone.Radio.channel(Options.Backbone.Radio.ChannelName)});}
if(icroot[Options.ICRoot.ChannelProperty]){dumper.info(`Backbone.Channel`,`Test:`,Options.Backbone.Radio.TestEvent,Options.Backbone.Radio.TestRequest);icroot[Options.ICRoot.ChannelProperty].on(Options.Backbone.Radio.TestEvent,function(){dumper.log(`Radio channel: '${this.channelName}' test event '${Options.Backbone.Radio.TestEvent}' with arguments:`,arguments);});icroot[Options.ICRoot.ChannelProperty].reply(Options.Backbone.Radio.TestRequest,function(){dumper.log(`Radio channel: '${this.channelName}' test event '${Options.Backbone.Radio.TestRequest}' with arguments:`,arguments);return`Reply: ${Options.Backbone.Radio.TestRequest}`;});}}